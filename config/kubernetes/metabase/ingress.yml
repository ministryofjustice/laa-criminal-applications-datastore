apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  namespace: laa-criminal-applications-metabase
  annotations:
    external-dns.alpha.kubernetes.io/set-identifier: ingress-laa-criminal-applications-metabase-green
    external-dns.alpha.kubernetes.io/aws-weight: "100"
    nginx.ingress.kubernetes.io/server-snippet: |
      if ($host = 'criminal-applications-metabase.apps.live.cloud-platform.service.justice.gov.uk') {
        return 301 https://metabase.apply-for-criminal-legal-aid.service.justice.gov.uk;
      }
      location = /.well-known/security.txt {
        auth_basic off;
        return 301 https://raw.githubusercontent.com/ministryofjustice/security-guidance/main/contact/vulnerability-disclosure-security.txt;
      }
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-transaction-id: "$request_id"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyLimit 1048576
      SecRequestBodyNoFilesLimit 1048576
      SecDefaultAction "phase:2,pass,log,tag:github_team=laa-crime-apply,setvar:tx.allowed_methods=GET HEAD POST OPTIONS PUT PATCH DELETE"
      SecAction "id:949110,phase:1,nolog,pass,t:none,setvar:tx.inbound_anomaly_score_threshold=12"
spec:
  ingressClassName: modsec
  tls:
    - hosts:
        - criminal-applications-metabase.apps.live.cloud-platform.service.justice.gov.uk
    - hosts:
        - metabase.apply-for-criminal-legal-aid.service.justice.gov.uk
      secretName: domain-tls-certificate
  rules:
    - host: criminal-applications-metabase.apps.live.cloud-platform.service.justice.gov.uk
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: service-metabase
                port:
                  number: 80
    - host: metabase.apply-for-criminal-legal-aid.service.justice.gov.uk
      http:
        paths:
          - path: /
            pathType: ImplementationSpecific
            backend:
              service:
                name: service-metabase
                port:
                  number: 80
